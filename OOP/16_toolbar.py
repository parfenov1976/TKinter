"""
Пример создания панели инструментов
"""

from PIL import Image, ImageTk
from tkinter import Tk, Frame, Menu, Button
from tkinter import LEFT, TOP, X, FLAT, RAISED


class Example(Frame):
    """
    Класс приложения с наследованием от родительского класса виджета Frame
    """

    def __init__(self, parent):
        """
        Конструктор класса приложения.
        :param parent: параметр для передачи ссылки на главное окно приложения
        """
        Frame.__init__(self, parent)  # вызов конструктора родительского класса
        self.parent = parent  # сохранение ссылки на главное окно приложения
        self.init_ui()  # вызов метода инициализации интерфейса приложения

    def init_ui(self):
        """
        Метод инициализации интерфейса приложения.
        """
        self.parent.title("Панель инструментов")  # присвоение имени главному окну приложения через ссылку на него
        # хранящуюся в атрибуте объекта приложения
        file_menu = Menu(self.parent, tearoff=0)  # создание выпадающего меню секции файл панели меню главного окна
        file_menu.add_command(label='Выход', command=self.on_exit)  # добавление команды выход в выпадающее меню
        # и привязка к нему вызова метода на выход из приложения
        menubar = Menu(self.parent)  # создание панели меню главного окна приложения
        menubar.add_cascade(label='Файл', menu=file_menu)
        # привязка выпадающего меню к секции Файл и размещение секции Файл на панели меню главного окна
        toolbar = Frame(self.parent, bd=1, relief=RAISED)  # создание рамки для размещения панели инструментов
        # bd=1 указывает, что граница рамки должна быть видимой, relief=RAISED устанавливает рельеф границы приподнятый
        img = Image.open('exit.png')  # загружаем изображение инструмента для панели инструментов
        eimg = ImageTk.PhotoImage(img)  # создание фотоизображения инструмента для панели инструментов
        exit_button = Button(toolbar, image=eimg, relief=FLAT, command=self.quit)  # создание кнопки выхода для панели
        # инструментов, установка связи с изображением инструмента и привязкой команды к нему
        exit_button.image = eimg  # загрузка изображения инструмента в виджет
        exit_button.pack(side=LEFT, padx=2, pady=2)  # размещение инструмента в рамке панели инструментов с
        # выравниванием по левому краю и отступом в 2 пикселя
        toolbar.pack(side=TOP, fill=X)  # размещение рамки панели инструментов в главной рамке приложения с привязкой к
        # к верхнему краю и заполнением по горизонтали
        self.parent.config(menu=menubar)  # настраиваем панель меню для отображения в качестве меню главного окна
        self.pack()  # размещение главной рамки приложения в главном окне

    def on_exit(self):
        """
        Метод, вызывающий команду выхода приложения
        """
        self.quit()  # команда на завершение сценария


def main():
    """
    Функция запуска кода верхнего уровня приложения
    """
    root = Tk()  # создание главного окна приложения
    root.geometry('250x150+300+300')  # установка размера главного окна и его размещение
    app = Example(root)  # создание экземпляра приложения с передачей ссылки на главное окно
    root.mainloop()  # запуск основного цикла главного окна приложения


if __name__ == '__main__':  # данная конструкция предотвращает запуск main при импортировании данного файла как модуля
    main()
