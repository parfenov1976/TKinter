"""
Пример использования виджета Scale - шкала с ползунком
"""
from tkinter import Tk, BOTH, IntVar, LEFT
from tkinter.ttk import Frame, Label, Scale, Style


class Example(Frame):
    """
    Класс приложения от родительского класса виджета Frame
    """
    def __init__(self, parent):
        """
        Конструктор приложения.
        :param parent: ссылка на основное окно
        """
        Frame.__init__(self)  # вызов конструктора родительского класса для создания главной рамки
        self.style = Style()  # создаем объект стиля для виджетов приложения
        self.parent = parent  # сохранение ссылки на основное окно
        self.var = IntVar()  # создаем переменную для хранения значения положения ползунка
        self.init_ui()  # вызываем метод, создающий пользовательский интерфейс

    def init_ui(self):
        """
        Метод инициализации интерфейса приложения
        """
        self.parent.title('Ярлык')  # устанавливаем название основного окна
        self.style.theme_use('default')  # устанавливаем стиль по умолчанию для главной рамки
        self.pack(fill=BOTH, expand=1)  # размещаем главную рамку в основном окне с заполнением и расширением
        scale = Scale(self, from_=0, to=100, command=self.on_scale)  # создаем экземпляр виджета ползунка
        scale.pack(side=LEFT, padx=15)  # размещаем ползунок в главной рамке с выравниванием по левому краю
        label = Label(self, text=0, textvariable=self.var)
        """
        Выше. Создаем ярлык для отображения значения положения ползунка и связываем его с переменной,
        в которой хранится значение его положения
        """
        label.pack(side=LEFT)  # размещаем ярлык в главной рамке с выравниванием по левому краю

    def on_scale(self, val):
        """
        Метод получает текущее выбранное значение из виджета шкалы как параметр.
        Значение сначала конвертируется в тип float (число с плавающей запятой), после чего конвертируется
        в тип integer (целое число). В результате, значение передается в self.var для хранения и отображается в
        ярлыке как текст.
        :param val: текущее значение из виджета шкалы
        """
        v = int(float(val))  # Конвертация. Если не сделать конвертацию в float будет ошибка при конвертации в int
        self.var.set(v)  # передача значения ползунка для отображения в ярлыке


def main():
    """
    Функция запуска кода верхнего уровня
    """
    root = Tk()  # создание главного окна приложения
    app = Example(root)  # создание экземпляра приложения с передачей ссылки на главное окно
    root.geometry("250x100+300+300")  # задаем размер окна и его расположение
    root.mainloop()  # запуск основного цикла главного окна


if __name__ == '__main__':  # данная конструкция предотвращает запуск main при импортировании данного файла как модуля
    main()
